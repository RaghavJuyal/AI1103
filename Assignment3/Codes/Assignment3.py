# -*- coding: utf-8 -*-
"""Assignment3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A2dOpGt_FFA6zV7Sdarl2hP67rh5VlTH
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import bernoulli

  
N = int(1e6)
prob1=1/4
data_1 = bernoulli.rvs(size=N,p=prob1)
count_X_0=0
count_X_1=0
for x in data_1:
  if(x==0):
    count_X_0+=1
  else:
    count_X_1+=1
p_X1 = count_X_0/N
p_X2 = count_X_1/N
cdf_X = [p_X1,p_X1+p_X2]
X = [0,1]
plt.title('C.D.F of X')
plt.xlim([-0.1,2])
plt.ylim([0,2])
plt.xlabel('x')
plt.ylabel('$F_X(x)$')
markerline, stemlines, baseline = plt.stem(X, cdf_X,'-', use_line_collection=True)
plt.show()

prob2=1/2
data_2 = bernoulli.rvs(size=N,p=prob2)
count_Y_0=0
count_Y_1=0
for y in data_2:
  if(y==0):
    count_Y_0+=1
  else:
    count_Y_1+=1
p_Y1 = count_Y_0/N
p_Y2 = count_Y_1/N
cdf_Y = [p_Y1,p_Y1+p_Y2]
Y = [0,1]
plt.title('C.D.F of Y')
plt.xlim([-0.1,2])
plt.ylim([0,2])
plt.xlabel('y')
plt.ylabel('$F_Y(y)$')
markerline, stemlines, baseline = plt.stem(Y, cdf_Y,'-', use_line_collection=True)
plt.show()